name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: "test_key"
      API_KEY: "test_key"
      DB_ENGINE: "sqlite"
      DB_USER: "test"
      DB_PASSWORD: "test"
      DB_HOST: "localhost"
      DB_PORT: "5432"
      DB_NAME: "testdb"
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12' # Or your project's python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest # Assuming you use pytest for tests

    - name: Run tests
      run: pytest tests/

  deploy:
    name: Deploy to VPS
    needs: test 
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.PROJECT_PATH }}
          git pull origin main
          docker-compose down
          ./run.sh prod
          docker image prune -f
